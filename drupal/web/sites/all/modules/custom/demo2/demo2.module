<?php

/**
 * Implement hook_node_view().
 */
function demo2_node_view($node, $view_mode = 'full') {
  if ($view_mode == 'full') {
    global $user;

    $record = demo2_get_record($node->nid, $node->uid);

    if ($record == FALSE) {
      $record = new stdClass();
      $record->nid = $node->nid;
      $record->uid = $node->uid;
      $record->last_viewed = time();
      $record->view_count = 0;
    }

    $record->view_count++;
    $record->last_viewed = time();

    demo2_set_record($record);

    if (empty($_SESSION['node_views'][$node->nid])){
      $_SESSION['node_views'][$node->nid] = 0;
    }

    $_SESSION['node_views'][$node->nid]++;

    $t_args = [
      '%num' => $record->view_count,
      '%date' => date('M j Y', $record->last_viewed),
    ];

    $node->content['node_views'] = [
      '#markup' => t('You have %num times %date', $t_args),
      '#weight' => 10,
    ];
  }
}

function demo2_get_record($nid, $uid) {
  $query = db_select('demo2', 'd')
    ->fields('d', ['nid', 'uid', 'view_count'])
    ->condition('nid', $nid)
    ->condition('uid', $uid);

  $record = $query->execute()->fetch();
  return $record;
}

/**
 * Save a record
 *
 * @param stdClass $record
 * The record to save 
 */
function demo2_set_record($record) {
  //sanity check
  if (!is_object($record)) {
    return watchdog('demo2', 'We could not update information about node views', array(), WATCHDOG_ERROR);
  }

  $query = db_merge('demo2')
    ->key(['nid' => $record->nid])
    ->key(['uid' => $record->uid])
    ->fields((array) $record);

  $query->execute();
}


